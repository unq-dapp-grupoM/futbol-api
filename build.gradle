plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.5'
	id 'io.spring.dependency-management' version '1.1.7'
	id "jacoco"
	id "org.sonarqube" version "6.3.1.5724"
}

group = 'com.dapp'
version = '0.0.1-SNAPSHOT'
description = 'Spring Boot project'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

ext {
	jjwtVersion = '0.12.5'
	springdocVersion = '2.8.13'
}

dependencies {

	// Spring Boot Starters
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// JWT (JSON Web Token)
	implementation "io.jsonwebtoken:jjwt-api:${jjwtVersion}"

	// Swagger / OpenAPI 3
	implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${springdocVersion}"
	runtimeOnly "io.jsonwebtoken:jjwt-impl:${jjwtVersion}"
	runtimeOnly "io.jsonwebtoken:jjwt-jackson:${jjwtVersion}"

	// Web Scraping
	implementation 'org.htmlunit:htmlunit:3.11.0'
	implementation 'org.seleniumhq.selenium:selenium-java:4.35.0'
	implementation 'org.seleniumhq.selenium:selenium-support:4.35.0'

	// Herramientas y Base de Datos
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'

	// Testing
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}

jacocoTestReport {
    reports {
        xml.required = true
		html.required = true
    }
	dependsOn test
}

check.dependsOn jacocoTestReport
