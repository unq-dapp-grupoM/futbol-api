plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.5'
	id 'io.spring.dependency-management' version '1.1.7'
	id "jacoco"
	id("org.sonarqube") version "latest.release"
}

group = 'com.dapp'
version = '0.0.1-SNAPSHOT'
description = 'Spring Boot project'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

dependencies {

	// Spring Boot Starters
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// JWT (JSON Web Token)
	implementation 'io.jsonwebtoken:jjwt-api:0.12.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.5'

	// Swagger / OpenAPI 3 & Web Scraping
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.0'

	// Herramientas y Base de Datos
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'

	// Testing
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}

sonar {
  properties {
    property "sonar.projectKey", "unq-dapp-grupoM_futbol-api"
    property "sonar.organization", "unq-dapp-grupom"
    property 'sonar.coverage.jacoco.xmlReportPaths', 'build/reports/jacoco/test/jacocoTestReport.xml'
    property "sonar.host.url", "https://sonarcloud.io"
  }
}

bootJar {
	mainClass = 'com.dapp.futbol_api.FutbolApiApplication'
}


jacocoTestReport {
    reports {
        xml.required = true
		html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }
	dependsOn test
}
