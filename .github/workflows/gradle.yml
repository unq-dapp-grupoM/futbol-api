# Name of the workflow that will be displayed in the "Actions" tab of GitHub.
name: Java CI with Gradle

# Defines the events that will trigger this workflow.
on:
<<<<<<< Updated upstream
  # Se ejecuta cuando se hace un push a la rama 'main' y la rama 'dev'.
  push:    
    branches: [ "main", "dev", "ft-render-config" ]
  # Se ejecuta cuando se crea o actualiza un Pull Request que apunta a 'main' y 'dev'.
=======
  # Runs when a push is made to the 'main' branch.
  push:
    branches: [ "main" ]
  # Runs when a Pull Request targeting 'main' is created or updated.
>>>>>>> Stashed changes
  pull_request:
    branches: [ "main", "dev", "ft-render-config" ]

# Defines the jobs that will be executed.
jobs:
  build-and-test:
    # The type of virtual machine on which the job will run. 'ubuntu-latest' is a standard option.
    runs-on: ubuntu-latest

    # The steps that make up the job. They are executed in sequence.
    steps:
      # 1. Clones your repository on the virtual machine.
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Set up the JDK. Your project uses Java 21.
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      # 3. Add the necessary permissions for the build.
      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      # 4. Run the Gradle build and test command using the wrapper.
      - name: Build with Gradle and run unit tests
        env:
          API_SECURITY_JWT_SECRET_KEY: ${{ secrets.API_SECURITY_JWT_SECRET_KEY }}
          API_SECURITY_KEY: ${{ secrets.API_SECURITY_KEY }}
        run: ./gradlew build

  # Nuevo trabajo para desplegar en Render.
  deploy-to-render:
    # Este trabajo depende de que 'build-and-test' termine exitosamente.
    needs: build-and-test
    # Se ejecuta solo cuando hay un push a la rama 'ft-render-config'.
    if: github.ref == 'refs/heads/ft-render-config' && github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Trigger Render Deploy Hook
        run: |
          echo "Triggering Render deployment..."
          curl -X POST ${{ secrets.RENDER_DEPLOY_HOOK_URL }}
          echo "Render deployment triggered!"
