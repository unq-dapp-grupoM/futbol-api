# Nombre del flujo de trabajo que se mostrará en la pestaña "Actions" de GitHub.
name: Java CI with Gradle

# Define los eventos que dispararán este flujo de trabajo.
on:
  # Se ejecuta cuando se hace un push a la rama 'main' y la rama 'dev'.
  push:    
    branches: [ "main", "dev", "ft-render-config" ]
  # Se ejecuta cuando se crea o actualiza un Pull Request que apunta a 'main' y 'dev'.
  pull_request:
    branches: [ "main", "dev", "ft-render-config" ]

# Define los trabajos (jobs) que se ejecutarán.
jobs:
  build-and-test:
    # El tipo de máquina virtual en la que se ejecutará el trabajo. 'ubuntu-latest' es una opción estándar.
    runs-on: ubuntu-latest

    # Los pasos que componen el trabajo. Se ejecutan en secuencia.
    steps:
      # 1. Clona tu repositorio en la máquina virtual.
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Configura el JDK. Tu proyecto usa Java 21.
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      # 3. Agrega los permisos necesarios para el build.
      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      # 4. Ejecuta el comando de compilación y pruebas de Gradle usando el wrapper.
      - name: Build with Gradle and run unit tests
        env:
          API_SECURITY_JWT_SECRET_KEY: ${{ secrets.API_SECURITY_JWT_SECRET_KEY }}
          API_SECURITY_KEY: ${{ secrets.API_SECURITY_KEY }}
        run: ./gradlew build

  # Nuevo trabajo para desplegar en Render.
  deploy-to-render:
    # Este trabajo depende de que 'build-and-test' termine exitosamente.
    needs: build-and-test
    # Se ejecuta solo cuando hay un push a la rama 'ft-render-config'.
    if: github.ref == 'refs/heads/ft-render-config' && github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Trigger Render Deploy Hook
        run: |
          echo "Triggering Render deployment..."
          curl -X POST ${{ secrets.RENDER_DEPLOY_HOOK_URL }}
          echo "Render deployment triggered!"
