name: Main CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    name: Build, Test & Analyze
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Necesario para SonarCloud

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build, test, and analyze with SonarCloud
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Proporciona el token para el an√°lisis de PRs
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew build jacocoTestReport sonar --info || true

  build-and-push-image:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    # Este job solo se ejecuta si el anterior (build-and-test) fue exitoso y si es un push a main
    needs: build-and-test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    permissions:
      contents: read
      packages: write # Permiso para escribir en GitHub Container Registry

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
 
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
 
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: . 
          push: true
          # Usa las etiquetas generadas por el paso anterior
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy-to-render:
    name: Deploy to Render
    runs-on: ubuntu-latest
    # Este job depende de que la imagen se haya subido correctamente
    needs: build-and-push-image
    permissions:
      # Necesario para crear un "GitHub deployment" y ver el estado en la UI de GitHub
      deployments: write
    steps:
      - name: Deploy to Render
        uses: JorgeLNJunior/render-deploy@v1.4.5
        with:
          # El ID de tu servicio en Render
          service_id: ${{ secrets.RENDER_SERVICE_ID }}
          # Tu API Key de Render
          api_key: ${{ secrets.RENDER_API_KEY }}
          # Espera a que el despliegue finalice
          wait_deploy: true
          # Crea un "GitHub Deployment" para visualizar el estado
          github_deployment: true
          deployment_environment: 'production'
          github_token: ${{ secrets.GITHUB_TOKEN }}